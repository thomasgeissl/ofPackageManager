name: Build and Setup OpenFrameworks

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-20.04

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up environment variables
      run: |
        REPO_NAME=$(basename $GITHUB_REPOSITORY)
        OF_VERSION=0.12.0
        OF_ROOT="$HOME/openFrameworks"
        APP_DIR="$OF_ROOT/apps/myApps/$REPO_NAME"
        echo "OF_VERSION=$OF_VERSION" >> $GITHUB_ENV
        echo "OF_ROOT=$OF_ROOT" >> $GITHUB_ENV
        echo "APP_DIR=$APP_DIR" >> $GITHUB_ENV
        echo "REPO_NAME=$REPO_NAME" >> $GITHUB_ENV

        # Optional: Log the variables for debugging
        echo "OF_ROOT is set to $OF_ROOT"
        echo "APP_DIR is set to $APP_DIR"
      shell: bash

    - name: Download and extract OpenFrameworks
      run: |
        wget https://github.com/openframeworks/openFrameworks/releases/download/0.12.0/of_v0.12.0_linux64gcc6_release.tar.gz
        tar -xf of_v0.12.0_linux64gcc6_release.tar.gz -C $HOME
        mv $HOME/of_v0.12.0_linux64gcc6_release $OF_ROOT
      shell: bash

    - name: Update package list
      run: sudo apt-get update
      shell: bash

    - name: Install required libraries
      run: |
        cd $OF_ROOT/scripts/linux/ubuntu
        sudo ./install_dependencies.sh
        sudo ./install_codecs.sh
      shell: bash

    - name: Log paths
      run: |
        echo "OF_ROOT: $OF_ROOT"
        echo "APP_DIR: $APP_DIR"
        echo "GITHUB_WORKSPACE: $GITHUB_WORKSPACE"
      shell: bash

    - name: Move repository into OpenFrameworks apps directory
      run: |
        ls $OF_ROOT
        mkdir -p $OF_ROOT/apps/myApps
        ls $OF_ROOT/apps/myApps
        cp -R $GITHUB_WORKSPACE $APP_DIR
      shell: bash

    - name: Run ofPackageManager to install packages
      run: |
        cd $APP_DIR
        bash -c "$(curl -sSL https://raw.githubusercontent.com/thomasgeissl/ofPackageManager/master/scripts/ofPackageManager.sh)" install
      shell: bash

    - name: Build the project
      run: |
        cd $APP_DIR
        make -j8
      shell: bash

    - name: Test app (cli)
      run: |
        cd $APP_DIR
        rm -rf local_addons
        ./bin/$REPO_NAME install
      shell: bash
